// <auto-generated />
using DogFood.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DogFood.Migrations
{
    [DbContext(typeof(DogFoodContext))]
    partial class DogFoodContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Misfits.Models.Data.DogFoodModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DogFoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DogFoods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Chicken Recipe, made with love",
                            DogFoodName = "Purina Pro Plan: Chicken and Rice Recipe",
                            ImageURL = "https://s7d2.scene7.com/is/image/PetSmart/5135727?$CLEARjpg$",
                            Ingredients = "Chicken, Rice, Whole Grain Wheat, Poultry By-Product, Soybean Meal",
                            ProductionCompany = "Purina"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Candiae, also made with love",
                            DogFoodName = "Canidae: Salmon and Sweet Potato",
                            ImageURL = "https://img.cdn4dd.com/cdn-cgi/image/fit=contain,width=1200,height=672,format=auto/https://doordash-static.s3.amazonaws.com/media/photosV2/478f1454-4f23-43f0-96b9-d68b45008397-retina-large.jpg",
                            Ingredients = "Salmon, Barley, Salmon Meal, Lentils, Sweet Potato, Garbanzo beans",
                            ProductionCompany = "Canidae"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Keep your dog healthy, happy and full with the 4health with Wholesome Grains Adult Salmon and Potato Formula Dry Dog Food. The wholesome, carefully selected ingredients provide optimal nutrition for adult dogs of any breed",
                            DogFoodName = "4Health: Salmon and Potato",
                            ImageURL = "https://media.tractorsupply.com/is/image/TractorSupplyCompany/1424210?wid=456&hei=456&fmt=jpeg&qlt=100,0&resMode=sharp2&op_usm=0.9,1.0,8,0",
                            Ingredients = "Salmon, ocean fish meal, potatoes, peas, cracked pearled barley, pea flour, egg product, canola oil",
                            ProductionCompany = "Diamond Pet Foods Inc"
                        });
                });

            modelBuilder.Entity("Misfits.Models.Data.ReviewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DogFoodModelId")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DogFoodModelId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DogFoodModelId = 1,
                            Review = "This dog food sucks, it killed my dog!",
                            ReviewerName = "Steve Smith"
                        },
                        new
                        {
                            Id = 2,
                            DogFoodModelId = 2,
                            Review = "This dog food is the best, it brought my dog back to life!",
                            ReviewerName = "Roger Rabbit"
                        },
                        new
                        {
                            Id = 3,
                            DogFoodModelId = 3,
                            Review = "My vet says potatoes are a Very Common allergy.My dogs now have bald spots.",
                            ReviewerName = "Tim Horton"
                        },
                        new
                        {
                            Id = 4,
                            DogFoodModelId = 1,
                            Review = "When the bag got delivered to the house, it had a RIP in it, and the DOG FOOD WAS REAL CRUNMBLY it just looked like it was STALE.",
                            ReviewerName = "Jackass666"
                        });
                });

            modelBuilder.Entity("Misfits.Models.Data.ReviewModel", b =>
                {
                    b.HasOne("Misfits.Models.Data.DogFoodModel", null)
                        .WithMany("Reviews")
                        .HasForeignKey("DogFoodModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Misfits.Models.Data.DogFoodModel", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
